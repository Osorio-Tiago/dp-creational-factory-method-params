format 222
"dp-creational-factory-method" // dp-creational-factory-method
  revision 1
  modified_by 2 "mguzmana"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "/Users/mguzmana/Documents/@Inbox/GitHub/dp-creational-factory-method/"
  cpp_src_dir "/Users/mguzmana/Documents/@Inbox/GitHub/dp-creational-factory-method/"
  classview 128002 "dp-creational-factory-method"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 128002 "Building"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Building
Base class to construct buildings
"
      operation 128002 "MakeBuilding"
	class_operation preserve_cpp_body_indent cpp_inline public return_type class_ref 128002 // Building
	nparams 1
	  param in name "choice" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//Definition of the Factory
//@param choice of build
//@return the corresponding instance
//

${inline}${typeprefix}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	
	
	comment " Factory Method"
      end

      operation 128130 "processMethod"
	abstract cpp_virtual public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end
    end

    class 128130 "House"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Derive class for House
Inherited from Building
"
      classrelation 128002 // <generalisation>
	relation 128002 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128002 // <generalisation>
	  b parent class_ref 128002 // Building
      end

      operation 128258 "processMethod"
	cpp_override cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return \"Create a beautiful House\";
    };
"
	
	
	
	
      end
    end

    class 128258 "Castle"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Derive class for Castle
Inherited from Building
"
      classrelation 128130 // <generalisation>
	relation 128130 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128130 // <generalisation>
	  b parent class_ref 128002 // Building
      end

      operation 128386 "processMethod"
	cpp_override cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return \"Create a huge Castle\";
    };
"
	
	
	
	
      end
    end

    class 128386 "Farm"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "Derive class for Farm
Inherited from Building
"
      classrelation 128258 // <generalisation>
	relation 128258 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128258 // <generalisation>
	  b parent class_ref 128002 // Building
      end

      operation 128514 "processMethod"
	cpp_override cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${typeprefix}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return \"Create a amazing Farm\";
    };
"
	
	
	
	
      end
    end

    classdiagram 128002 "class"
      classdiagramsettings member_max_width 0 end
      size A4
    end
  end

  deploymentview 128002 "dp-creational-factory-method"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 128002 "Building"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 128002 // Building
      end
    end

    artifact 128130 "House"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 128130 // House
      end
    end

    artifact 128258 "Castle"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 128258 // Castle
      end
    end

    artifact 128386 "Farm"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 128386 // Farm
      end
    end

    artifact 128514 "main"
      stereotype "source"
      cpp_src "//
//Main Class
//@return
//

int main() {
    std::cout << \"Hello, Universidad Nacional!\" << std::endl;

    Building* newHouse = Building::MakeBuilding(1);
    Building* newCastle = Building::MakeBuilding(2);
    Building* newFarm = Building::MakeBuilding(3);

    std::cout << newHouse->processMethod() << std::endl;
    std::cout << newCastle->processMethod() << std::endl;
    std::cout << newFarm->processMethod() << std::endl;

    return 0;
}
"
      associated_elems
      end
    end
  end

  package_ref 128130 // cmake-build-debug
end
